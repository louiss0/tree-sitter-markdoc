  01-document-frontmatter:
      1. Γ£ô [32mEmpty document[0m
      2. Γ£ô [32mFrontmatter only[0m
      3. Γ£ô [32mDocument without frontmatter[0m
      4. Γ£ô [32mFrontmatter and body[0m
  02-headings-paragraphs:
      5. Γ£ô [32mATX heading level 1[0m
      6. Γ£ô [32mATX heading level 2[0m
      7. Γ£ô [32mATX heading level 3[0m
      8. Γ£ô [32mATX heading levels 4-6[0m
      9. Γ£ô [32mHeading with trailing space[0m
     10. Γ£ô [32mHeading without space after marker (invalid)[0m
     11. Γ£ô [32mSimple paragraph[0m
     12. Γ£ù [31mParagraph with multiple lines[0m
     13. Γ£ù [31mTwo paragraphs separated by blank line[0m
     14. Γ£ô [32mHeading followed by paragraph[0m
     15. Γ£ô [32mMixed headings and paragraphs[0m
     16. Γ£ô [32mHeading with frontmatter[0m
  03-fenced-code:
     17. Γ£ù [31mBacktick fence without info string[0m
     18. Γ£ù [31mBacktick fence with language[0m
     19. Γ£ù [31mBacktick fence with language and attributes[0m
     20. Γ£ù [31mTilde fence without info string[0m
     21. Γ£ù [31mTilde fence with language[0m
     22. Γ£ù [31mTilde fence with language and attributes[0m
     23. Γ£ù [31mMulti-line code content[0m
     24. Γ£ô [32mEmpty code block[0m
     25. Γ£ù [31mCode block with heading after[0m
     26. Γ£ù [31mCode block with paragraph after[0m
     27. Γ£ù [31mMixed backticks and content[0m
     28. Γ£ù [31mCode block with frontmatter[0m
  04-markdoc-tags:
     29. Γ£ù [31mSelf-closing tag[0m
     30. Γ£ù [31mBlock tag without content[0m
     31. Γ£ù [31mBlock tag with paragraph content[0m
     32. Γ£ù [31mBlock tag with multiple paragraphs[0m
     33. Γ£ù [31mNested block tags[0m
     34. Γ£ù [31mTag with string attribute[0m
     35. Γ£ù [31mTag with multiple attributes[0m
     36. Γ£ù [31mSelf-closing tag with attributes[0m
     37. Γ£ô [32mSimple inline expression[0m
     38. Γ£ù [31mInline expression with property access[0m
     39. Γ£ù [31mMultiple inline expressions in paragraph[0m
     40. Γ£ù [31mTag with heading inside[0m
     41. Γ£ù [31mTag with code block inside[0m
     42. Γ£ù [31mMixed content with tags and expressions[0m
     43. Γ£ù [31mTag with frontmatter[0m
  05-html-tags-and-comments:
     44. Γ£ù [31mHTML block tag[0m
     45. Γ£ù [31mHTML self-closing tag[0m
     46. Γ£ô [32mHTML comment[0m
     47. Γ£ô [32mMulti-line HTML comment[0m
     48. Γ£ù [31mMarkdoc comment block[0m
     49. Γ£ù [31mMixed HTML and Markdoc content[0m
  05-lists:
     50. Γ£ù [31mSimple unordered list[0m
     51. Γ£ù [31mSimple ordered list[0m
     52. Γ£ù [31mMixed unordered markers[0m
     53. Γ£ù [31mList with blank line separation[0m
     54. Γ£ù [31mList after heading[0m
     55. Γ£ù [31mList before paragraph[0m
     56. Γ£ù [31mNested unordered list (simple)[0m
     57. Γ£ù [31mNested ordered list[0m
  06-expressions-and-attributes:
     58. Γ£ù [31mComplex member access expressions[0m
     59. Γ£ù [31mFunction call expressions[0m
     60. Γ£ù [31mObject and array expressions[0m
     61. Γ£ù [31mBinary and unary expressions[0m
     62. Γ£ù [31mTag with complex attribute expressions[0m
  06-inline-formatting:
     63. Γ£ô [32mEmphasis with asterisks[0m
     64. Γ£ô [32mEmphasis with underscores[0m
     65. Γ£ô [32mStrong with double asterisks[0m
     66. Γ£ô [32mStrong with double underscores[0m
     67. Γ£ô [32mMixed emphasis and strong[0m
     68. Γ£ô [32mInline code[0m
     69. Γ£ô [32mLink with text and URL[0m
     70. Γ£ô [32mImage with alt text[0m
     71. Γ£ô [32mMultiple inline elements[0m
     72. Γ£ù [31mInline formatting in list[0m
  07-html:
     73. Γ£ô [32mHTML block - simple div[0m
     74. Γ£ô [32mHTML block with attributes[0m
     75. Γ£ô [32mSelf-closing HTML tag[0m
     76. Γ£ô [32mHTML comment block[0m
     77. Γ£ô [32mInline HTML in paragraph[0m
     78. Γ£ô [32mMultiple inline HTML elements[0m
     79. Γ£ô [32mHTML block before paragraph[0m
     80. Γ£ô [32mHTML block after heading[0m
     81. Γ£ô [32mInline HTML with self-closing tag[0m
  07-tag-closing-and-whitespace:
     82. Γ£ù [31mAlternative tag closing syntax (without slash)[0m
     83. Γ£ù [31mTag with extra whitespace[0m
     84. Γ£ù [31mNested list indentation[0m
     85. Γ£ù [31mMixed list and tag indentation[0m
     86. Γ£ù [31mTag with blank lines in content[0m
     87. Γ£ù [31mIndented code block in tag[0m
  08-expressions:
     88. Γ£ù [31mSimple member expression[0m
     89. Γ£ù [31mNested member expression[0m
     90. Γ£ô [32mArray literal with numbers[0m
     91. Γ£ô [32mArray literal with strings[0m
     92. Γ£ô [32mObject literal simple[0m
     93. Γ£ô [32mObject literal multiple pairs[0m
     94. Γ£ù [31mCall expression simple[0m
     95. Γ£ù [31mCall expression with arguments[0m
     96. Γ£ù [31mMember call expression[0m
     97. Γ£ù [31mNested expressions[0m
  08-paragraphs-and-lists:
     98. Γ£ù [31mBasic paragraphs[0m
     99. Γ£ù [31mList with paragraphs[0m
    100. Γ£ù [31mMixed blocks and lists[0m

60 failures:

correct / [32mexpected[0m / [31munexpected[0m

  1. Paragraph with multiple lines:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (paragraph
[0m[32m        (text)
[0m[32m        (text)
[0m        (text)))


  2. Two paragraphs separated by blank line:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (paragraph
[0m[32m        (text)
[0m        (text))
      (paragraph
        (text)))


  3. Backtick fence without info string:

    (source_file
      (fenced_code_block
        (code_fence_open)
[31m        (code_fence_close
[0m[31m          (ERROR
[0m[31m            (UNEXPECTED 'c')))))[0m
[32m        (code)
[0m[32m        (code_fence_close)))[0m


  4. Backtick fence with language:

    (source_file
[31m      (ERROR
[0m[32m      (fenced_code_block
[0m        (code_fence_open
          (info_string
            (language)))
[31m        (UNEXPECTED 'c')
[0m[31m        (UNEXPECTED 'l')))))(UNEXPECTED ''')(UNEXPECTED ';')(fenced_code_block
[0m[31m  (code_fence_open)
[0m[31m  (code_fence_close
[0m[31m    (MISSING "```")))[0m
[32m        (code)
[0m[32m        (code_fence_close)))[0m


  5. Backtick fence with language and attributes:

    (source_file
[31m      (ERROR
[0m[32m      (fenced_code_block
[0m        (code_fence_open
          (info_string
            (language)
            (attributes)))
[31m        (UNEXPECTED 'c')
[0m[31m        (UNEXPECTED ' ')
[0m[31m        (number)
[0m[31m        (UNEXPECTED ';')))))(fenced_code_block
[0m[31m  (code_fence_open)
[0m[31m  (code_fence_close
[0m[31m    (MISSING "```")))[0m
[32m        (code)
[0m[32m        (code_fence_close)))[0m


  6. Tilde fence without info string:

    (source_file
      (fenced_code_block
        (code_fence_open)
[31m        (code_fence_close
[0m[31m          (ERROR
[0m[31m            (UNEXPECTED 's')))))[0m
[32m        (code)
[0m[32m        (code_fence_close)))[0m


  7. Tilde fence with language:

    (source_file
[31m      (ERROR
[0m[32m      (fenced_code_block
[0m        (code_fence_open
          (info_string
            (language)))
[31m        (UNEXPECTED 'd')
[0m[31m        (UNEXPECTED 'p')))))(UNEXPECTED 'h')(fenced_code_block
[0m[31m  (code_fence_open)
[0m[31m  (code_fence_close
[0m[31m    (MISSING "```")))[0m
[32m        (code)
[0m[32m        (code_fence_close)))[0m


  8. Tilde fence with language and attributes:

    (source_file
[31m      (ERROR
[0m[32m      (fenced_code_block
[0m        (code_fence_open
          (info_string
            (language)
            (attributes)))
[31m        (UNEXPECTED 'l')
[0m[31m        (UNEXPECTED ' ')
[0m[31m        (UNEXPECTED ' ')
[0m[31m        (number)
[0m[31m        (UNEXPECTED ';')))))(fenced_code_block
[0m[31m  (code_fence_open)
[0m[31m  (code_fence_close
[0m[31m    (MISSING "```")))[0m
[32m        (code)
[0m[32m        (code_fence_close)))[0m


  9. Multi-line code content:

    (source_file
[31m      (ERROR
[0m[32m      (fenced_code_block
[0m        (code_fence_open
          (info_string
            (language)))
[31m        (UNEXPECTED 'p'))
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (paragraph
[0m[31m        (text)
[0m[31m        (ERROR)
[0m[31m        (text))
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (fenced_code_block
[0m[31m        (code_fence_open)
[0m[31m        (code_fence_close
[0m[31m          (MISSING "```"))))[0m
[32m        (code)
[0m[32m        (code_fence_close)))[0m


  10. Code block with heading after:

    (source_file
[31m      (ERROR
[0m[32m      (fenced_code_block
[0m        (code_fence_open
          (info_string
            (language)))
[31m        (UNEXPECTED 'e')
[0m[31m        (UNEXPECTED 't')))))(fenced_code_block
[0m[31m  (code_fence_open)
[0m[31m  (code_fence_close
[0m[31m    (MISSING "```")))(heading
[0m[31m  (heading_marker)
[0m[31m  (heading_text))[0m
[32m        (code)
[0m[32m        (code_fence_close))
[0m[32m      (heading
[0m[32m        (heading_marker)
[0m[32m        (heading_text)))[0m


  11. Code block with paragraph after:

    (source_file
      (fenced_code_block
        (code_fence_open)
[31m        (code_fence_close
[0m[31m          (ERROR
[0m[31m            (UNEXPECTED 'c'))))
[0m[32m        (code)
[0m[32m        (code_fence_close))
[0m      (paragraph
        (text)))


  12. Mixed backticks and content:

    (source_file
      (fenced_code_block
        (code_fence_open
          (info_string
            (language)))
[31m        (code_fence_close
[0m[31m          (ERROR
[0m[31m            (UNEXPECTED 'c')
[0m[31m            (UNEXPECTED ' '))))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED ';')))))(paragraph
[0m[31m  (text)
[0m[31m  (ERROR)
[0m[31m  (inline_code
[0m[31m    (MISSING "`")))(fenced_code_block
[0m[31m  (code_fence_open)
[0m[31m  (code_fence_close
[0m[31m    (MISSING "```")))[0m
[32m        (code)
[0m[32m        (code_fence_close)))[0m


  13. Code block with frontmatter:

    (source_file
      (frontmatter
        (yaml))
[31m      (ERROR
[0m[32m      (fenced_code_block
[0m        (code_fence_open
          (info_string
            (language)))
[31m        (UNEXPECTED 'p')
[0m[31m        (UNEXPECTED 'H')))))(fenced_code_block
[0m[31m  (code_fence_open)
[0m[31m  (code_fence_close
[0m[31m    (MISSING "```")))[0m
[32m        (code)
[0m[32m        (code_fence_close)))[0m


  14. Self-closing tag:

    (source_file
      (markdoc_tag
        (tag_self_close
[31m          (ERROR))))[0m
[32m          (tag_name))))[0m


  15. Block tag without content:

    (source_file
      (markdoc_tag
        (tag_open
[31m          (ERROR))
[0m[31m        (tag_close)))[0m
[32m          (tag_name))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  16. Block tag with paragraph content:

    (source_file
[31m      (ERROR)
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED 'c')))[0m
[32m      (markdoc_tag
[0m[32m        (tag_open
[0m[32m          (tag_name))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  17. Block tag with multiple paragraphs:

    (source_file
[31m      (ERROR)
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED 's')))[0m
[32m      (markdoc_tag
[0m[32m        (tag_open
[0m[32m          (tag_name))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  18. Nested block tags:

    (source_file
      (markdoc_tag
        (tag_open
[31m          (ERROR))
[0m[32m          (tag_name))
[0m        (markdoc_tag
          (tag_open
[31m            (ERROR))
[0m[32m            (tag_name))
[0m          (paragraph
            (text))
[31m          (ERROR)
[0m[31m          (tag_close))
[0m[31m        (tag_close)))[0m
[32m          (tag_close
[0m[32m            (tag_name)))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  19. Tag with string attribute:

    (source_file
      (markdoc_tag
        (tag_open
[32m          (tag_name)
[0m          (attribute
            (attribute_name)
[31m            (string))
[0m[31m          (ERROR))
[0m[31m        (tag_close)))[0m
[32m            (attribute_value
[0m[32m              (string))))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  20. Tag with multiple attributes:

    (source_file
      (markdoc_tag
        (tag_open
[32m          (tag_name)
[0m          (attribute
            (attribute_name)
[31m            (string))
[0m[32m            (attribute_value
[0m[32m              (string)))
[0m          (attribute
            (attribute_name)
[31m            (string))
[0m[31m          (ERROR))
[0m[32m            (attribute_value
[0m[32m              (string))))
[0m        (paragraph
          (text))
[31m        (ERROR)
[0m[31m        (tag_close)))[0m
[32m        (tag_close
[0m[32m          (tag_name))))[0m


  21. Self-closing tag with attributes:

    (source_file
      (markdoc_tag
        (tag_self_close
[32m          (tag_name)
[0m          (attribute
            (attribute_name)
[31m            (string))
[0m[32m            (attribute_value
[0m[32m              (string)))
[0m          (attribute
            (attribute_name)
[31m            (string))
[0m[31m          (ERROR))))[0m
[32m            (attribute_value
[0m[32m              (string))))))[0m


  22. Inline expression with property access:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (ERROR
[0m[31m        (expression
[0m[31m          (identifier))
[0m[31m        (UNEXPECTED 'n')))[0m
[32m        (text)
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (member_expression
[0m[32m              (identifier)
[0m[32m              (identifier))))))[0m


  23. Multiple inline expressions in paragraph:

    (source_file
      (paragraph
        (inline_expression
          (expression
            (identifier)))
        (text)
        (inline_expression
          (expression
[31m            (identifier))))
[0m[31m      (ERROR))[0m
[32m            (identifier)))
[0m[32m        (text)))[0m


  24. Tag with heading inside:

    (source_file
[31m      (ERROR
[0m[32m      (markdoc_tag
[0m        (tag_open
[31m          (ERROR))
[0m[32m          (tag_name))
[0m        (heading
          (heading_marker)
[31m          (heading_text)))
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED 's')))[0m
[32m          (heading_text))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  25. Tag with code block inside:

    (source_file
      (markdoc_tag
        (tag_open
[31m          (ERROR))
[0m[32m          (tag_name))
[0m        (fenced_code_block
          (code_fence_open
            (info_string
              (language)))
[31m          (code_fence_close
[0m[31m            (ERROR
[0m[31m              (UNEXPECTED 'c'))))
[0m[31m        (tag_close)))[0m
[32m          (code)
[0m[32m          (code_fence_close))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  26. Mixed content with tags and expressions:

    (source_file
      (heading
        (heading_marker)
        (heading_text))
      (markdoc_tag
        (tag_open
[31m          (ERROR))
[0m[31m        (paragraph
[0m[31m          (text))
[0m[32m          (tag_name))
[0m        (paragraph
[32m          (text)
[0m          (inline_expression
            (expression
              (identifier))))
[31m        (ERROR)
[0m[31m        (tag_close))
[0m[32m        (tag_close
[0m[32m          (tag_name)))
[0m      (paragraph
        (text)
        (inline_expression
          (expression
            (identifier)))
        (text)))


  27. Tag with frontmatter:

    (source_file
      (frontmatter
        (yaml))
[31m      (ERROR)
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED 'c')))[0m
[32m      (markdoc_tag
[0m[32m        (tag_open
[0m[32m          (tag_name))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  28. HTML block tag:

    (source_file
[31m      (html_block))[0m
[32m      (html_block
[0m[32m        (html_attr
[0m[32m          (attribute_name)
[0m[32m          (attribute_value
[0m[32m            (string)))
[0m[32m        (html_content
[0m[32m          (text))))[0m


  29. HTML self-closing tag:

    (source_file
[31m      (html_block))[0m
[32m      (paragraph
[0m[32m        (html_inline
[0m[32m          (html_attr
[0m[32m            (attribute_name)
[0m[32m            (attribute_value
[0m[32m              (string)))
[0m[32m          (html_attr
[0m[32m            (attribute_name)
[0m[32m            (attribute_value
[0m[32m              (string))))))[0m


  30. Markdoc comment block:

    (source_file
[31m      (markdoc_tag
[0m[31m        (tag_open
[0m[31m          (ERROR))
[0m[31m        (paragraph
[0m[31m          (text)
[0m[31m          (text))
[0m[31m        (ERROR)
[0m[31m        (tag_close)))[0m
[32m      (comment_block))[0m


  31. Mixed HTML and Markdoc content:

    (source_file
[31m      (html_block))[0m
[32m      (html_block
[0m[32m        (html_attr
[0m[32m          (attribute_name)
[0m[32m          (attribute_value
[0m[32m            (string)))
[0m[32m        (html_content
[0m[32m          (markdoc_tag
[0m[32m            (tag_open
[0m[32m              (tag_name))
[0m[32m            (html_block
[0m[32m              (html_content
[0m[32m                (text)))
[0m[32m            (tag_close
[0m[32m              (tag_name))))))[0m


  32. Simple unordered list:

    (source_file
      (list
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[31m            (text))))
[0m[31m      (ERROR))[0m
[32m          (paragraph
[0m[32m            (text)))))[0m


  33. Simple ordered list:

    (source_file
      (list
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[31m            (text))))
[0m[31m      (ERROR))[0m
[32m          (paragraph
[0m[32m            (text)))))[0m


  34. Mixed unordered markers:

    (source_file
      (list
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[31m            (text))))
[0m[31m      (ERROR))[0m
[32m          (paragraph
[0m[32m            (text)))))[0m


  35. List with blank line separation:

    (source_file
      (list
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[31m            (text)))
[0m[31m        (ERROR)
[0m[32m          (paragraph
[0m[32m            (text))))
[0m[32m      (list
[0m        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[31m            (text))))
[0m[31m      (ERROR))[0m
[32m          (paragraph
[0m[32m            (text)))))[0m


  36. List after heading:

    (source_file
      (heading
        (heading_marker)
        (heading_text))
      (list
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[31m            (text))))
[0m[31m      (ERROR))[0m
[32m          (paragraph
[0m[32m            (text)))))[0m


  37. List before paragraph:

    (source_file
      (list
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text))))
[31m      (ERROR
[0m[31m        (UNEXPECTED 'R')))[0m
[32m      (paragraph
[0m[32m        (text)))[0m


  38. Nested unordered list (simple):

    (source_file
      (list
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[31m            (text)))
[0m[31m        (ERROR
[0m[31m          (UNEXPECTED ' '))
[0m[31m        (list_item
[0m[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text)))
[0m[31m        (ERROR
[0m[31m          (UNEXPECTED ' '))
[0m[31m        (list_item
[0m[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text))))
[0m[31m      (ERROR))[0m
[32m          (paragraph
[0m[32m            (text))
[0m[32m          (list
[0m[32m            (list_item
[0m[32m              (list_marker)
[0m[32m              (paragraph
[0m[32m                (text)))
[0m[32m            (list_item
[0m[32m              (list_marker)
[0m[32m              (paragraph
[0m[32m                (text)))))))[0m


  39. Nested ordered list:

    (source_file
      (list
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[31m            (text)))
[0m[31m        (ERROR
[0m[31m          (UNEXPECTED ' '))
[0m[31m        (list_item
[0m[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text)))
[0m[31m        (ERROR
[0m[31m          (UNEXPECTED ' '))
[0m[31m        (list_item
[0m[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text))))
[0m[31m      (ERROR))[0m
[32m          (paragraph
[0m[32m            (text))
[0m[32m          (list
[0m[32m            (list_item
[0m[32m              (list_marker)
[0m[32m              (paragraph
[0m[32m                (text)))
[0m[32m            (list_item
[0m[32m              (list_marker)
[0m[32m              (paragraph
[0m[32m                (text)))))))[0m


  40. Complex member access expressions:

    (source_file
[31m      (ERROR
[0m[31m        (expression
[0m[31m          (identifier))
[0m[31m        (UNEXPECTED 'p')
[0m[31m        (UNEXPECTED 'n')))))(ERROR
[0m[31m  (ERROR
[0m[31m    (expression
[0m[31m      (identifier)))
[0m[31m  (expression
[0m[31m    (array_literal
[0m[31m      (expression
[0m[31m        (number))))
[0m[31m  (UNEXPECTED 't'))(paragraph
[0m[31m  (inline_expression
[0m[31m    (expression
[0m[31m      (identifier))
[0m[31m    (MISSING _expression_end)))(ERROR
[0m[31m  (link_text)
[0m[31m  (UNEXPECTED 'v'))[0m
[32m      (paragraph
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (member_expression
[0m[32m              (member_expression
[0m[32m                (identifier)
[0m[32m                (identifier))
[0m[32m              (identifier))))
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (member_expression
[0m[32m              (subscript_expression
[0m[32m                (identifier)
[0m[32m                (number))
[0m[32m              (identifier))))
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (member_expression
[0m[32m              (subscript_expression
[0m[32m                (identifier)
[0m[32m                (string))
[0m[32m              (identifier))))))[0m


  41. Function call expressions:

    (source_file
[31m      (ERROR
[0m[31m        (expression
[0m[31m          (identifier))
[0m[31m        (UNEXPECTED 'd')
[0m[31m        (UNEXPECTED ' '))
[0m[31m      (ERROR
[0m[31m        (ERROR
[0m[32m      (paragraph
[0m[32m        (inline_expression
[0m          (expression
[31m            (identifier))
[0m[31m          (number)
[0m[31m          (UNEXPECTED ' ')
[0m[32m            (call_expression
[0m[32m              (identifier)
[0m[32m              (expression
[0m[32m                (identifier)))))
[0m[32m        (inline_expression
[0m          (expression
[31m            (number))
[0m[31m          (UNEXPECTED ' '))
[0m[31m        (expression
[0m[31m          (number))
[0m[31m        (UNEXPECTED ' '))
[0m[31m      (ERROR
[0m[31m        (ERROR
[0m[32m            (call_expression
[0m[32m              (identifier)
[0m[32m              (expression
[0m[32m                (number))
[0m[32m              (expression
[0m[32m                (number))
[0m[32m              (expression
[0m[32m                (number)))))
[0m[32m        (inline_expression
[0m          (expression
[31m            (identifier))
[0m[31m          (UNEXPECTED 'u'))))))(UNEXPECTED 'n')(UNEXPECTED ' ')(expression
[0m[31m  (array_literal
[0m[31m    (ERROR
[0m[31m      (UNEXPECTED '''))))(UNEXPECTED ' ')[0m
[32m            (call_expression
[0m[32m              (identifier)
[0m[32m              (expression
[0m[32m                (member_expression
[0m[32m                  (identifier)
[0m[32m                  (identifier)))
[0m[32m              (expression
[0m[32m                (subscript_expression
[0m[32m                  (identifier)
[0m[32m                  (string))))))))[0m


  42. Object and array expressions:

    (source_file
[31m      (ERROR
[0m[31m        (ERROR
[0m[31m          (UNEXPECTED ' ')
[0m[31m          (UNEXPECTED ' ')
[0m[31m          (UNEXPECTED 'n')
[0m[31m          (UNEXPECTED ' ')
[0m[31m          (UNEXPECTED ' '))
[0m[31m        (expression
[0m[31m          (number))
[0m[31m        (UNEXPECTED ' '))
[0m      (paragraph
        (inline_expression
          (expression
[31m            (array_literal
[0m[31m              (ERROR
[0m[31m                (UNEXPECTED ''')))))))))(UNEXPECTED ' ')(expression
[0m[31m  (number))(expression
[0m[31m  (array_access
[0m[31m    (member_expression
[0m[31m      (identifier)
[0m[31m      (identifier))
[0m[31m    (expression
[0m[31m      (number))))[0m
[32m            (object
[0m[32m              (pair
[0m[32m                (identifier)
[0m[32m                (expression
[0m[32m                  (member_expression
[0m[32m                    (identifier)
[0m[32m                    (identifier))))
[0m[32m              (pair
[0m[32m                (identifier)
[0m[32m                (expression
[0m[32m                  (number))))))
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (array
[0m[32m              (expression
[0m[32m                (string))
[0m[32m              (expression
[0m[32m                (number))
[0m[32m              (expression
[0m[32m                (member_expression
[0m[32m                  (member_expression
[0m[32m                    (identifier)
[0m[32m                    (identifier))
[0m[32m                  (number))))))))[0m


  43. Binary and unary expressions:

    (source_file
      (paragraph
        (inline_expression
[31m          (ERROR
[0m[31m            (expression
[0m[31m              (identifier))
[0m[31m            (UNEXPECTED '>'))
[0m          (expression
[31m            (number))))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED 'i')))))(number)(UNEXPECTED ' ')(ERROR
[0m[31m  (UNEXPECTED 'v'))[0m
[32m            (binary_expression
[0m[32m              (expression
[0m[32m                (identifier))
[0m[32m              (expression
[0m[32m                (number)))))
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (binary_expression
[0m[32m              (unary_expression
[0m[32m                (expression
[0m[32m                  (identifier)))
[0m[32m              (binary_expression
[0m[32m                (expression
[0m[32m                  (identifier))
[0m[32m                (expression
[0m[32m                  (number))))))
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (unary_expression
[0m[32m              (expression
[0m[32m                (identifier)))))))[0m


  44. Tag with complex attribute expressions:

    (source_file
[31m      (ERROR
[0m[31m        (UNEXPECTED 'i'))
[0m[31m      (paragraph
[0m[31m        (link
[0m[31m          (link_text)
[0m[31m          (ERROR
[0m[31m            (UNEXPECTED 'c')))))))(UNEXPECTED 'e')(UNEXPECTED ' ')(UNEXPECTED 'u')(UNEXPECTED ' ')(UNEXPECTED 'n')(UNEXPECTED 'c')(UNEXPECTED ' ')(UNEXPECTED '>')(link_destination)(text)(paragraph
[0m[31m  (text))(paragraph
[0m[31m  (text))(ERROR
[0m[31m  (UNEXPECTED 'c'))[0m
[32m      (markdoc_tag
[0m[32m        (tag_open
[0m[32m          (tag_name)
[0m[32m          (attribute
[0m[32m            (attribute_name)
[0m[32m            (attribute_value
[0m[32m              (expression
[0m[32m                (array
[0m[32m                  (expression
[0m[32m                    (number))
[0m[32m                  (expression
[0m[32m                    (number))
[0m[32m                  (expression
[0m[32m                    (number))))))
[0m[32m          (attribute
[0m[32m            (attribute_name)
[0m[32m            (attribute_value
[0m[32m              (expression
[0m[32m                (object
[0m[32m                  (pair
[0m[32m                    (identifier)
[0m[32m                    (expression
[0m[32m                      (boolean)))
[0m[32m                  (pair
[0m[32m                    (identifier)
[0m[32m                    (expression
[0m[32m                      (member_expression
[0m[32m                        (identifier)
[0m[32m                        (identifier))))))))
[0m[32m          (attribute
[0m[32m            (attribute_name)
[0m[32m            (attribute_value
[0m[32m              (expression
[0m[32m                (arrow_function
[0m[32m                  (expression
[0m[32m                    (call_expression
[0m[32m                      (identifier)
[0m[32m                      (expression
[0m[32m                        (identifier)))))))))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  45. Inline formatting in list:

    (source_file
      (list
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)
            (emphasis)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)
            (strong)))
        (list_item
          (list_marker)
[31m          (list_paragraph
[0m[32m          (paragraph
[0m            (text)
[31m            (inline_code))))
[0m[31m      (ERROR))[0m
[32m            (inline_code)))))[0m


  46. Alternative tag closing syntax (without slash):

    (source_file
[31m      (ERROR)
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (ERROR))[0m
[32m      (markdoc_tag
[0m[32m        (tag_open
[0m[32m          (tag_name))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  47. Tag with extra whitespace:

    (source_file
[31m      (ERROR)
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED 's')))[0m
[32m      (markdoc_tag
[0m[32m        (tag_open
[0m[32m          (tag_name))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  48. Nested list indentation:

    (source_file
      (list
        (list_item
[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text)))
[0m[31m        (ERROR
[0m[31m          (UNEXPECTED ' '))
[0m[31m        (list_item
[0m[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text)))
[0m[31m        (ERROR
[0m[31m          (UNEXPECTED ' '))
[0m[31m        (list_item
[0m[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text)))
[0m[31m        (ERROR
[0m[31m          (UNEXPECTED ' ')
[0m[31m          (number))
[0m[31m        (list_item
[0m[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text))))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED ' ')
[0m[31m        (number)))[0m
[32m          (paragraph
[0m[32m            (text))
[0m[32m          (list
[0m[32m            (list_item
[0m[32m              (paragraph
[0m[32m                (text))
[0m[32m              (list
[0m[32m                (list_item
[0m[32m                  (paragraph
[0m[32m                    (text))
[0m[32m                  (paragraph
[0m[32m                    (text)))))
[0m[32m            (list_item
[0m[32m              (paragraph
[0m[32m                (text))
[0m[32m              (paragraph
[0m[32m                (text)))))))[0m


  49. Mixed list and tag indentation:

    (source_file
[31m      (ERROR
[0m[32m      (list
[0m        (list_item
[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text)))
[0m[31m        (UNEXPECTED ' ')
[0m[31m        (markdoc_tag
[0m[31m          (tag_open
[0m[31m            (ERROR))
[0m          (paragraph
[31m            (text)
[0m            (text))
[31m          (ERROR)
[0m[31m          (tag_close))
[0m[31m        (UNEXPECTED ' '))
[0m[31m      (list
[0m[31m        (list_item
[0m[31m          (list_marker)
[0m[31m          (list_paragraph
[0m[31m            (text))))
[0m[31m      (ERROR))[0m
[32m          (markdoc_tag
[0m[32m            (tag_open
[0m[32m              (tag_name))
[0m[32m            (list
[0m[32m              (list_item
[0m[32m                (paragraph
[0m[32m                  (text))
[0m[32m                (list
[0m[32m                  (list_item
[0m[32m                    (paragraph
[0m[32m                      (text))))))
[0m[32m            (tag_close
[0m[32m              (tag_name)))
[0m[32m          (list
[0m[32m            (list_item
[0m[32m              (paragraph
[0m[32m                (text)))))))[0m


  50. Tag with blank lines in content:

    (source_file
[31m      (ERROR)
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (paragraph
[0m[31m        (text))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED 's')))[0m
[32m      (markdoc_tag
[0m[32m        (tag_open
[0m[32m          (tag_name))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (paragraph
[0m[32m          (text))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  51. Indented code block in tag:

    (source_file
      (markdoc_tag
        (tag_open
[31m          (ERROR))
[0m[31m        (paragraph
[0m[31m          (text)
[0m[31m          (text)
[0m[31m          (text))
[0m[31m        (ERROR)
[0m[31m        (tag_close)))[0m
[32m          (tag_name))
[0m[32m        (code_block
[0m[32m          (code))
[0m[32m        (tag_close
[0m[32m          (tag_name))))[0m


  52. Simple member expression:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (ERROR
[0m[31m        (expression
[0m[31m          (identifier))
[0m[31m        (UNEXPECTED 'n')
[0m[31m        (UNEXPECTED ' ')))[0m
[32m        (text)
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (member_expression
[0m[32m              (identifier)
[0m[32m              (identifier))))
[0m[32m        (text)))[0m


  53. Nested member expression:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (ERROR
[0m[31m        (expression
[0m[31m          (identifier))
[0m[31m        (UNEXPECTED 'p')
[0m[31m        (UNEXPECTED 'n')))))[0m
[32m        (text)
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (member_expression
[0m[32m              (member_expression
[0m[32m                (identifier)
[0m[32m                (identifier))
[0m[32m              (identifier))))
[0m[32m        (text)))[0m


  54. Call expression simple:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (ERROR
[0m[31m        (expression
[0m[31m          (identifier))
[0m[31m        (UNEXPECTED ' ')
[0m[31m        (UNEXPECTED ' ')))[0m
[32m        (text)
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (call_expression
[0m[32m              (identifier)
[0m[32m              (arguments))))
[0m[32m        (text)))[0m


  55. Call expression with arguments:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (ERROR
[0m[31m        (ERROR
[0m[32m        (text)
[0m[32m        (inline_expression
[0m          (expression
[31m            (identifier))
[0m[31m          (number)
[0m[31m          (UNEXPECTED ' '))
[0m[31m        (expression
[0m[31m          (number))
[0m[31m        (UNEXPECTED ' ')
[0m[31m        (UNEXPECTED ' ')))[0m
[32m            (call_expression
[0m[32m              (identifier)
[0m[32m              (arguments
[0m[32m                (expression
[0m[32m                  (number))
[0m[32m                (expression
[0m[32m                  (number))))))
[0m[32m        (text)))[0m


  56. Member call expression:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (ERROR
[0m[31m        (expression
[0m[31m          (identifier))
[0m[31m        (UNEXPECTED 'g')
[0m[31m        (UNEXPECTED ' ')
[0m[31m        (UNEXPECTED ' ')))[0m
[32m        (text)
[0m[32m        (inline_expression
[0m[32m          (expression
[0m[32m            (call_expression
[0m[32m              (member_expression
[0m[32m                (identifier)
[0m[32m                (identifier))
[0m[32m              (arguments))))
[0m[32m        (text)))[0m


  57. Nested expressions:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (ERROR
[0m[31m        (ERROR
[0m[32m        (text)
[0m[32m        (inline_expression
[0m          (expression
[31m            (identifier))
[0m[31m          (UNEXPECTED 'm')
[0m[31m          (UNEXPECTED 'a'))))))(expression
[0m[31m  (array_literal
[0m[31m    (expression
[0m[31m      (number))))(UNEXPECTED ' ')(UNEXPECTED ' ')[0m
[32m            (call_expression
[0m[32m              (member_expression
[0m[32m                (identifier)
[0m[32m                (identifier))
[0m[32m              (arguments
[0m[32m                (expression
[0m[32m                  (array_access
[0m[32m                    (identifier)
[0m[32m                    (expression
[0m[32m                      (number))))))))
[0m[32m        (text)))[0m


  58. Basic paragraphs:

    (source_file
      (paragraph
[31m        (text))
[0m[31m      (paragraph
[0m[32m        (text)
[0m        (text))
      (paragraph
        (text)))


  59. List with paragraphs:

    (source_file
      (list
        (list_item
          (list_marker)
          (list_paragraph
            (text)))
        (list_item
          (list_marker)
          (list_paragraph
[31m            (text))))
[0m[31m      (ERROR
[0m[31m        (UNEXPECTED ' ')))[0m
[32m            (text)
[0m[32m            (text)))))[0m


  60. Mixed blocks and lists:

    (source_file
      (paragraph
        (text))
      (list
        (list_item
          (list_marker)
          (list_paragraph
            (text)))
        (list_item
          (list_marker)
          (list_paragraph
            (text))))
[31m      (ERROR
[0m[31m        (UNEXPECTED 'M')))[0m
[32m      (paragraph
[0m[32m        (text)))[0m

