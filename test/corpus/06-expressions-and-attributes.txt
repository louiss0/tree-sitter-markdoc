=============================================================================
Complex member access expressions
=============================================================================

{{ user.profile.name }}
{{ items[0].title }}
{{ data['key'].value }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (member_expression
          object: (member_expression
            object: (identifier)
            property: (identifier))
          property: (identifier))))
    (inline_expression
      content: (expression
        (member_expression
          object: (array_access
            array: (identifier)
            index: (expression
              (number)))
          property: (identifier))))
    (inline_expression
      content: (expression
        (member_expression
          object: (array_access
            array: (identifier)
            index: (expression
              (string)))
          property: (identifier))))))

=============================================================================
Function call expressions
=============================================================================

{{ formatDate(date) }}
{{ calculate(1, 2, 3) }}
{{ process(user.name, options['default']) }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (call_expression
          (identifier)
          (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (call_expression
          (identifier)
          (expression
            (number))
          (expression
            (number))
          (expression
            (number)))))
    (inline_expression
      content: (expression
        (call_expression
          (identifier)
          (expression
            (member_expression
              object: (identifier)
              property: (identifier)))
          (expression
            (array_access
              array: (identifier)
              index: (expression
                (string)))))))))

=============================================================================
Object and array expressions
=============================================================================

{{ { name: user.name, age: 25 } }}
{{ ['first', 2, user.items[0]] }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (object_literal
          (pair
            (identifier)
            (expression
              (member_expression
                object: (identifier)
                property: (identifier))))
          (pair
            (identifier)
            (expression
              (number))))))
    (inline_expression
      content: (expression
        (array_literal
          (expression
            (string))
          (expression
            (number))
          (expression
            (array_access
              array: (member_expression
                object: (identifier)
                property: (identifier))
              index: (expression
                (number)))))))))

=============================================================================
Binary and unary expressions
=============================================================================

{{ age > 18 }}
{{ !isDone && count < 10 }}
{{ -value }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_greater_than)
          right: (expression
            (number)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (unary_expression
              operator: (unary_not)
              argument: (expression
                (identifier))))
          operator: (binary_and)
          right: (expression
            (binary_expression
              left: (expression
                (identifier))
              operator: (binary_less_than)
              right: (expression
                (number)))))))
    (inline_expression
      content: (expression
        (unary_expression
          operator: (unary_minus)
          argument: (expression
            (identifier)))))))

=============================================================================
Arithmetic operators - addition and subtraction
=============================================================================

{{ a + b }}
{{ x - y }}
{{ 10 + 5 - 3 }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_add)
          right: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_subtract)
          right: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (binary_expression
              left: (expression
                (number))
              operator: (binary_add)
              right: (expression
                (number))))
          operator: (binary_subtract)
          right: (expression
            (number)))))))

=============================================================================
Arithmetic operators - multiplication, division, modulo
=============================================================================

{{ a * b }}
{{ x / y }}
{{ n % 10 }}
{{ 2 * 3 + 4 }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_multiply)
          right: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_divide)
          right: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_modulo)
          right: (expression
            (number)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (binary_expression
              left: (expression
                (number))
              operator: (binary_multiply)
              right: (expression
                (number))))
          operator: (binary_add)
          right: (expression
            (number)))))))

=============================================================================
Comparison operators - equality
=============================================================================

{{ x == y }}
{{ a != b }}
{{ status == "active" }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_equal)
          right: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_not_equal)
          right: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_equal)
          right: (expression
            (string)))))))

=============================================================================
Comparison operators - relational
=============================================================================

{{ age < 18 }}
{{ count > 100 }}
{{ score <= maxScore }}
{{ price >= minPrice }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_less_than)
          right: (expression
            (number)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_greater_than)
          right: (expression
            (number)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_less_equal)
          right: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_greater_equal)
          right: (expression
            (identifier)))))))

=============================================================================
Logical operators
=============================================================================

{{ isActive && isVerified }}
{{ hasError || hasWarning }}
{{ (x > 5) && (y < 10) }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_and)
          right: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_or)
          right: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (parenthesized_expression
              (expression
                (binary_expression
                  left: (expression
                    (identifier))
                  operator: (binary_greater_than)
                  right: (expression
                    (number))))))
          operator: (binary_and)
          right: (expression
            (parenthesized_expression
              (expression
                (binary_expression
                  left: (expression
                    (identifier))
                  operator: (binary_less_than)
                  right: (expression
                    (number)))))))))))

=============================================================================
Unary operators - all types
=============================================================================

{{ !condition }}
{{ -10 }}
{{ +value }}
{{ !isActive && -balance > 0 }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (unary_expression
          operator: (unary_not)
          argument: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (number)))
    (inline_expression
      content: (expression
        (unary_expression
          operator: (unary_plus)
          argument: (expression
            (identifier)))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (unary_expression
              operator: (unary_not)
              argument: (expression
                (identifier))))
          operator: (binary_and)
          right: (expression
            (binary_expression
              left: (expression
                (unary_expression
                  operator: (unary_minus)
                  argument: (expression
                    (identifier))))
              operator: (binary_greater_than)
              right: (expression
                (number)))))))))

=============================================================================
Operator precedence test
=============================================================================

{{ a + b * c }}
{{ x || y && z }}
{{ 10 - 5 * 2 }}

-----------------------------------------------------------------------------

(source_file
  (paragraph
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_add)
          right: (expression
            (binary_expression
              left: (expression
                (identifier))
              operator: (binary_multiply)
              right: (expression
                (identifier)))))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (identifier))
          operator: (binary_or)
          right: (expression
            (binary_expression
              left: (expression
                (identifier))
              operator: (binary_and)
              right: (expression
                (identifier)))))))
    (inline_expression
      content: (expression
        (binary_expression
          left: (expression
            (number))
          operator: (binary_subtract)
          right: (expression
            (binary_expression
              left: (expression
                (number))
              operator: (binary_multiply)
              right: (expression
                (number)))))))))

=============================================================================
Operators in tag attributes
=============================================================================

{% if condition=$x > 5 %}
Content
{% /if %}

{% tag value=$a + $b * $c /%}

-----------------------------------------------------------------------------

(source_file
  (markdoc_tag
    (tag_open
      (tag_name)
      (attribute
        (attribute_name)
        (attribute_value
          (expression
            (binary_expression
              left: (expression
                (variable
                  (identifier)))
              operator: (binary_greater_than)
              right: (expression
                (number)))))))
    (paragraph
      (text))
    (tag_close
      (tag_name)))
  (markdoc_tag
    (tag_self_close
      (tag_name)
      (attribute
        (attribute_name)
        (attribute_value
          (expression
            (binary_expression
              left: (expression
                (variable
                  (identifier)))
              operator: (binary_add)
              right: (expression
                (binary_expression
                  left: (expression
                    (variable
                      (identifier)))
                  operator: (binary_multiply)
                  right: (expression
                    (variable
                      (identifier))))))))))))

